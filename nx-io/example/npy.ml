open Nx
open Nx_io

let data_dir = "test_data"
let output_dir = "test_data"
let () = Printexc.record_backtrace true

let () =
  (* Create a simple float32 Nx using your interface *)
  let npy_to_save =
    create Float32 [| 2; 3 |] [| 1.1; 2.2; 3.3; 4.4; 5.5; 6.6 |]
  in
  let npy_save_path = Filename.concat output_dir "simple_f32.npy" in
  save_npy npy_to_save npy_save_path;
  Format.printf "Saved float32 array to: %s\n" npy_save_path;

  (* Load a .npy file (float32 generated by Python) *)
  let npy_load_path_f32 = Filename.concat data_dir "array_f32.npy" in
  let packed_f32 : packed_nx = load_npy npy_load_path_f32 in
  Format.printf "Loaded packed array from: %s\n" npy_load_path_f32;

  (* Unpack it using the conversion function *)
  let loaded_f32 = to_float32 packed_f32 in
  Format.printf "  Unpacked to float32 (shape: %a)\n" pp_shape
    (shape loaded_f32);

  Format.printf "  Data:\n%a\n" pp loaded_f32;

  (* Load the int64 .npy file *)
  let npy_load_path_i64 = Filename.concat data_dir "array_i64.npy" in
  let packed_i64 : packed_nx = load_npy npy_load_path_i64 in
  Format.printf "Loaded packed array from: %s\n" npy_load_path_i64;
  let loaded_i64 = to_int64 packed_i64 in
  Format.printf "  Unpacked to int64 (shape: %a)\n" pp_shape (shape loaded_i64)
